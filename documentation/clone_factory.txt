Create new objects from clones of established prototypes,
rather than passing necessary arguments to the constructors for those objects.

This allows for zero-argument initialization,
which is necessary for easy creation of Entity objects through Actions



Cloning of Entities is achieved by taking advantage of the serialization system
pack/unpack structure from the serialization,
allows for "serialization"-like feel, without having to actually go all the way to the disk.
The entire operation can be performed in memory without additional special facilities.






=== Don't leak data
-------------------------------------
Make sure that no data that could identity an Entity leaks outside the CloneFactory.
This means the factory is responsible for reseting data specific to one instance of an Entity,
such as the string of a Text object.
Don't want a new Text to have the same string as the prototype, just the same size and style.

(If you want an EXACT clone, it's easy enough to copy the string over)



(Though, it is a bit weird, because you're clearing and then setting it again...)








=== When are prototypes established?
-------------------------------------
One group of prototypes is loaded with CloneFactory.load
this is the default set,
and exists only so there is SOMETHING to generate new objects from.


New prototypes should be bound so that it feels like
the user is generating objects similar to the objects edited recently.



-- New Prototype Flow

Text         Registered in Edit action. Can't currently get the prototypes registered in TextInput,
             although that would certainly be more ideal.
             Would make automation more straightforward if the prototypes
             were established closer to the backed, instead of in the Action system.

